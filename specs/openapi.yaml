openapi: 3.0.3

info:
  title: Banking API Demo
  version: 1.0.0
  description: |
    A simple demo API for banking operations.
    Includes endpoints to retrieve account details and create transactions.

    Demo being held at Devoxx Antwerp & Marrakesh 2025.

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /accounts/{accountId}:
    get:
      operationId: getAccountDetails
      summary: Get account details
      description: Retrieve details of a specific bank account.
      tags:
        - accounts
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            example: "ACC123456"
      responses:
        '200':
          description: Account details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '404':
          description: Account not found.
  /transactions:
    post:
      operationId: createTransaction
      summary: Create a new transaction
      description: Perform a transfer between two accounts.
      tags:
        - transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          description: Transaction created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid transaction request.
        '422':
          description: Insufficient funds.

components:
  schemas:
    Account:
      type: object
      required:
        - accountId
        - owner
        - currency
      properties:
        accountId:
          type: string
          example: "ACC123456"
        owner:
          type: string
          example: "Alice Smith"
        balance:
          type: number
          format: float
          example: 2500.75
        currency:
          type: string
          example: "CHF"

    TransactionRequest:
      type: object
      required:
        - fromAccount
        - toAccount
        - amount
        - currency
      properties:
        fromAccount:
          type: string
          example: "ACC123456"
        toAccount:
          type: string
          example: "ACC654321"
        amount:
          type: number
          format: float
          example: 150.50
        currency:
          type: string
          example: "CHF"
        description:
          type: string
          example: "Dinner with friends"

    TransactionResponse:
      type: object
      properties:
        transactionId:
          type: string
          example: "TX987654321"
        status:
          type: string
          enum: [PENDING, COMPLETED, FAILED]
          example: "COMPLETED"
        timestamp:
          type: string
          format: date-time
          example: "2025-08-22T14:55:00Z"
